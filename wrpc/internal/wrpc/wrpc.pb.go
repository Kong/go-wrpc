// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: wrpc/internal/wrpc/wrpc.proto

package wrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PayloadVersion identifies the version of the payload.
type PayloadVersion int32

const (
	// UNSPECIFIED indicates that the version is not specified.
	// Receiver MUST drop the message.
	PayloadVersion_PAYLOAD_VERSION_UNSPECIFIED PayloadVersion = 0
	// V1 denotes version 1.
	PayloadVersion_PAYLOAD_VERSION_V1 PayloadVersion = 1
)

// Enum value maps for PayloadVersion.
var (
	PayloadVersion_name = map[int32]string{
		0: "PAYLOAD_VERSION_UNSPECIFIED",
		1: "PAYLOAD_VERSION_V1",
	}
	PayloadVersion_value = map[string]int32{
		"PAYLOAD_VERSION_UNSPECIFIED": 0,
		"PAYLOAD_VERSION_V1":          1,
	}
)

func (x PayloadVersion) Enum() *PayloadVersion {
	p := new(PayloadVersion)
	*p = x
	return p
}

func (x PayloadVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_wrpc_internal_wrpc_wrpc_proto_enumTypes[0].Descriptor()
}

func (PayloadVersion) Type() protoreflect.EnumType {
	return &file_wrpc_internal_wrpc_wrpc_proto_enumTypes[0]
}

func (x PayloadVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadVersion.Descriptor instead.
func (PayloadVersion) EnumDescriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{0}
}

// MessageType identifies the type of a WebSocket message.
type MessageType int32

const (
	// UNSPECIFIED indicates that the type of the message is unknown.
	// Receiver MUST drop the message.
	MessageType_MESSAGE_TYPE_UNSPECIFIED MessageType = 0
	// ERROR signals a protocol error such as incorrect serialization, timeouts,
	// network hiccups, etc.
	MessageType_MESSAGE_TYPE_ERROR MessageType = 1
	// RPC signals that the message contains a request or a response.
	MessageType_MESSAGE_TYPE_RPC MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNSPECIFIED",
		1: "MESSAGE_TYPE_ERROR",
		2: "MESSAGE_TYPE_RPC",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED": 0,
		"MESSAGE_TYPE_ERROR":       1,
		"MESSAGE_TYPE_RPC":         2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_wrpc_internal_wrpc_wrpc_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_wrpc_internal_wrpc_wrpc_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{1}
}

// Error identifies serialization, network, and protocol errors.
type ErrorType int32

const (
	ErrorType_ERROR_TYPE_UNSPECIFIED ErrorType = 0
	// INVALID_MESSAGE signals that the message received is invalid.
	ErrorType_ERROR_TYPE_INVALID_MESSAGE ErrorType = 1
	// INVALID_SERVICE signals that the service or RPC initiated by the sender
	// is unknown to the receiver.
	ErrorType_ERROR_TYPE_INVALID_SERVICE ErrorType = 2
	// INVALID_SERVICE signals that the service or RPC initiated by the sender
	// is unknown to the receiver.
	ErrorType_ERROR_TYPE_INVALID_RPC ErrorType = 3
	// INVALID_PAYLOAD signals that the payload within a received message is invalid.
	// Use this error to signal incorrect number of arguments and incorrect
	// serialization to the other side.
	ErrorType_ERROR_TYPE_INVALID_PAYLOAD ErrorType = 4
)

// Enum value maps for ErrorType.
var (
	ErrorType_name = map[int32]string{
		0: "ERROR_TYPE_UNSPECIFIED",
		1: "ERROR_TYPE_INVALID_MESSAGE",
		2: "ERROR_TYPE_INVALID_SERVICE",
		3: "ERROR_TYPE_INVALID_RPC",
		4: "ERROR_TYPE_INVALID_PAYLOAD",
	}
	ErrorType_value = map[string]int32{
		"ERROR_TYPE_UNSPECIFIED":     0,
		"ERROR_TYPE_INVALID_MESSAGE": 1,
		"ERROR_TYPE_INVALID_SERVICE": 2,
		"ERROR_TYPE_INVALID_RPC":     3,
		"ERROR_TYPE_INVALID_PAYLOAD": 4,
	}
)

func (x ErrorType) Enum() *ErrorType {
	p := new(ErrorType)
	*p = x
	return p
}

func (x ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_wrpc_internal_wrpc_wrpc_proto_enumTypes[2].Descriptor()
}

func (ErrorType) Type() protoreflect.EnumType {
	return &file_wrpc_internal_wrpc_wrpc_proto_enumTypes[2]
}

func (x ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorType.Descriptor instead.
func (ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{2}
}

// Encoding identifies the encoding method used to encode a payload.
type Encoding int32

const (
	Encoding_ENCODING_UNSPECIFIED Encoding = 0
	Encoding_ENCODING_PROTO3      Encoding = 1
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "ENCODING_PROTO3",
	}
	Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED": 0,
		"ENCODING_PROTO3":      1,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_wrpc_internal_wrpc_wrpc_proto_enumTypes[3].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_wrpc_internal_wrpc_wrpc_proto_enumTypes[3]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Encoding.Descriptor instead.
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{3}
}

// Error represents a protocol error.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// eType denotes the type of the error.
	Etype ErrorType `protobuf:"varint,1,opt,name=etype,proto3,enum=wrpc.ErrorType" json:"etype,omitempty"`
	// description contains human readable contextual information associated
	// with the error.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wrpc_internal_wrpc_wrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_wrpc_internal_wrpc_wrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetEtype() ErrorType {
	if x != nil {
		return x.Etype
	}
	return ErrorType_ERROR_TYPE_UNSPECIFIED
}

func (x *Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// PayloadV1 is a container for WebSocket messages.
type PayloadV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mtype denotes the type of the payload within a WebSocket message.
	Mtype MessageType `protobuf:"varint,1,opt,name=mtype,proto3,enum=wrpc.MessageType" json:"mtype,omitempty"`
	// When mtype is set to MESSAGE_TYPE_ERROR, this field contains the error.
	// This field represents error due to encoding, network and protocol. Use ack
	// to tie an error with a request or response received from the other side.
	// Errors returned by an RPC are part of 'payloads' and NOT this field.
	// Payloads field MUST not be set when this field is set. Sender MUST set
	// set svc_id, rpc_id, seq to add contextual information for the receiver.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// svc_id is the ID of the service as defined in the proto file of the Service.
	// The ID is defined in the description of the Service.
	// We acknowledge that it is cumbersome to track these IDs manually
	// without any support for linting and programmatic access.
	// This may be defined within the proto file
	// itself using proto3 custom options in future.
	// ID MUST be greater than 0.
	//
	// Receiver MUST return INVALID_SERVICE error when this field contains a
	// service that the receiver doesn't understand.
	SvcId uint32 `protobuf:"varint,3,opt,name=svc_id,json=svcId,proto3" json:"svc_id,omitempty"`
	// rpc_id is the ID of the RPC as defined in the proto file of the Service.
	// The ID is defined in the description of the RPC.
	// We acknowledge that it is cumbersome to track these IDs manually
	// without any support for linting and programmatic access.
	// This may be defined within the proto file
	// itself using proto3 custom options in future.
	// ID MUST be greater than 0.
	//
	// Receiver MUST return INVALID_RPC error when this field contains an
	// RPC that the receiver doesn't understand.
	RpcId uint32 `protobuf:"varint,4,opt,name=rpc_id,json=rpcId,proto3" json:"rpc_id,omitempty"`
	// seq is a number chosen by the sender. The sender MUST initialize this
	// field to 1 for the first RPC on a given connection and then it should be
	// incremented every time a new RPC is initiated. The receiver must not assume
	// that the sequence numbers are strictly incremental.
	//
	// There are no guarantees about the order in which requests will be
	// processed by the receiver. This field has no semantics outside the context
	// of a WebSocket connection. It is invalid to set this field to 0 and the
	// receiver MUST drop the message if that is the case.
	Seq uint32 `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	// ack represents that the message contains a response or error for an RPC
	// that was initiated earlier by the receiver of this message. To tie the message
	// to a request received by the sender, sender ack MUST be set to the seq
	// number in the request message.
	Ack uint32 `protobuf:"varint,6,opt,name=ack,proto3" json:"ack,omitempty"`
	// deadline is UNIX epoch time in seconds to indicate the time when the
	// client will give up waiting for a response. Absolute time is used instead
	// of timeouts to account for network and TCP/HTTP buffer latencies. It is
	// assumed that out of band time synchronization solutions are deployed
	// already. This field MUST be set to a non-zero value for a request and MUST
	// be set to 0 for a response.
	Deadline uint32 `protobuf:"varint,7,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// payload_encoding identifies the encoding used for the payload.
	// This field MUST be specified when payloads is set.
	PayloadEncoding Encoding `protobuf:"varint,8,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=wrpc.Encoding" json:"payload_encoding,omitempty"`
	// payloads is an array representing the request or response data of an RPC.
	// A request message MAY contain multiple elements where each element represents
	// an argument to the RPC call. The order of the elements MUST correspond to
	// the order of arguments in the function call.
	// A response message MUST contain a single payload.
	// Use a wrapper type for RPCs which contain multiple responses.
	// Unless otherwise specified by the Service or RPC, the encoding method in
	// use is PROTO3.
	//
	// Note: This results in double proto3 encoding. Once encoding of payloads,
	// and then encoding of the entire message. We acknowledge that there are
	// some overheads here and they will be addressed in a future iteration.
	//
	Payloads [][]byte `protobuf:"bytes,9,rep,name=payloads,proto3" json:"payloads,omitempty"`
}

func (x *PayloadV1) Reset() {
	*x = PayloadV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wrpc_internal_wrpc_wrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadV1) ProtoMessage() {}

func (x *PayloadV1) ProtoReflect() protoreflect.Message {
	mi := &file_wrpc_internal_wrpc_wrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadV1.ProtoReflect.Descriptor instead.
func (*PayloadV1) Descriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{1}
}

func (x *PayloadV1) GetMtype() MessageType {
	if x != nil {
		return x.Mtype
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *PayloadV1) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *PayloadV1) GetSvcId() uint32 {
	if x != nil {
		return x.SvcId
	}
	return 0
}

func (x *PayloadV1) GetRpcId() uint32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *PayloadV1) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PayloadV1) GetAck() uint32 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *PayloadV1) GetDeadline() uint32 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *PayloadV1) GetPayloadEncoding() Encoding {
	if x != nil {
		return x.PayloadEncoding
	}
	return Encoding_ENCODING_UNSPECIFIED
}

func (x *PayloadV1) GetPayloads() [][]byte {
	if x != nil {
		return x.Payloads
	}
	return nil
}

// WebsocketPayload represents a protobuf-based encoded payload of a WebSocket
// message.
type WebsocketPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version identifies the version of the payload.
	Version PayloadVersion `protobuf:"varint,1,opt,name=version,proto3,enum=wrpc.PayloadVersion" json:"version,omitempty"`
	// payload contains the message. This field MUST be present if and only if
	// version is set to 1.
	Payload *PayloadV1 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WebsocketPayload) Reset() {
	*x = WebsocketPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wrpc_internal_wrpc_wrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketPayload) ProtoMessage() {}

func (x *WebsocketPayload) ProtoReflect() protoreflect.Message {
	mi := &file_wrpc_internal_wrpc_wrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketPayload.ProtoReflect.Descriptor instead.
func (*WebsocketPayload) Descriptor() ([]byte, []int) {
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP(), []int{2}
}

func (x *WebsocketPayload) GetVersion() PayloadVersion {
	if x != nil {
		return x.Version
	}
	return PayloadVersion_PAYLOAD_VERSION_UNSPECIFIED
}

func (x *WebsocketPayload) GetPayload() *PayloadV1 {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_wrpc_internal_wrpc_wrpc_proto protoreflect.FileDescriptor

var file_wrpc_internal_wrpc_wrpc_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x77, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x77, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x77, 0x72, 0x70, 0x63, 0x22, 0x50, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x77, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x02, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x77, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x77, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x76, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x76, 0x63, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x70, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x70, 0x63, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x39, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x77, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x31, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x49, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x59, 0x4c, 0x4f,
	0x41, 0x44, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x31, 0x10, 0x01,
	0x2a, 0x59, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x50, 0x43, 0x10, 0x02, 0x2a, 0xa3, 0x01, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x50, 0x43, 0x10,
	0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x10,
	0x04, 0x2a, 0x39, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x14, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x43, 0x4f, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x33, 0x10, 0x01, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6e, 0x67, 0x2f,
	0x67, 0x6f, 0x2d, 0x77, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x77, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_wrpc_internal_wrpc_wrpc_proto_rawDescOnce sync.Once
	file_wrpc_internal_wrpc_wrpc_proto_rawDescData = file_wrpc_internal_wrpc_wrpc_proto_rawDesc
)

func file_wrpc_internal_wrpc_wrpc_proto_rawDescGZIP() []byte {
	file_wrpc_internal_wrpc_wrpc_proto_rawDescOnce.Do(func() {
		file_wrpc_internal_wrpc_wrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_wrpc_internal_wrpc_wrpc_proto_rawDescData)
	})
	return file_wrpc_internal_wrpc_wrpc_proto_rawDescData
}

var file_wrpc_internal_wrpc_wrpc_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_wrpc_internal_wrpc_wrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wrpc_internal_wrpc_wrpc_proto_goTypes = []interface{}{
	(PayloadVersion)(0),      // 0: wrpc.PayloadVersion
	(MessageType)(0),         // 1: wrpc.MessageType
	(ErrorType)(0),           // 2: wrpc.ErrorType
	(Encoding)(0),            // 3: wrpc.Encoding
	(*Error)(nil),            // 4: wrpc.Error
	(*PayloadV1)(nil),        // 5: wrpc.PayloadV1
	(*WebsocketPayload)(nil), // 6: wrpc.WebsocketPayload
}
var file_wrpc_internal_wrpc_wrpc_proto_depIdxs = []int32{
	2, // 0: wrpc.Error.etype:type_name -> wrpc.ErrorType
	1, // 1: wrpc.PayloadV1.mtype:type_name -> wrpc.MessageType
	4, // 2: wrpc.PayloadV1.error:type_name -> wrpc.Error
	3, // 3: wrpc.PayloadV1.payload_encoding:type_name -> wrpc.Encoding
	0, // 4: wrpc.WebsocketPayload.version:type_name -> wrpc.PayloadVersion
	5, // 5: wrpc.WebsocketPayload.payload:type_name -> wrpc.PayloadV1
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_wrpc_internal_wrpc_wrpc_proto_init() }
func file_wrpc_internal_wrpc_wrpc_proto_init() {
	if File_wrpc_internal_wrpc_wrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wrpc_internal_wrpc_wrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wrpc_internal_wrpc_wrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wrpc_internal_wrpc_wrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wrpc_internal_wrpc_wrpc_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wrpc_internal_wrpc_wrpc_proto_goTypes,
		DependencyIndexes: file_wrpc_internal_wrpc_wrpc_proto_depIdxs,
		EnumInfos:         file_wrpc_internal_wrpc_wrpc_proto_enumTypes,
		MessageInfos:      file_wrpc_internal_wrpc_wrpc_proto_msgTypes,
	}.Build()
	File_wrpc_internal_wrpc_wrpc_proto = out.File
	file_wrpc_internal_wrpc_wrpc_proto_rawDesc = nil
	file_wrpc_internal_wrpc_wrpc_proto_goTypes = nil
	file_wrpc_internal_wrpc_wrpc_proto_depIdxs = nil
}
